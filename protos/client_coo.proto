// client 与 coo 交互协议
syntax = "proto3";
package clientcoosvc;

// 导入 Empty 类型
// import "google/protobuf/empty.proto";
import "common.proto";

service ClientCooService {
    rpc Auth (AuthReq) returns (AuthResp);
    rpc List (commonsvc.CooListReq) returns (stream commonsvc.CooListResp);
    rpc NewTopic (NewTopicReq) returns (NewTopicResp);
    rpc AddPartitions (AddPartitionsReq) returns (AddPartitionsResp);
    rpc Pull (PullReq) returns (stream commonsvc.TopicPartition);
}

message AuthReq {
    string username = 1;
    string password = 2;
    string nonce = 3;
    string crypto_type = 4;
}

message AuthResp {
    string error = 1;
    string token = 2;
}

message NewTopicReq {
    // topic 
    string topic = 1;
    // 该 topic 的分区数量
    uint32 partitio_num = 2;
}

message NewTopicResp {
    bool success = 1;
    string error = 2;
    optional commonsvc.TopicPartition detail = 3;
}

message AddPartitionsReq {
    // topic 
    string topic = 1;
    // 该 topic 的增加的分区数量
    uint32 partitio_num = 2; 
    string key = 3;
}

message AddPartitionsResp {
    bool success = 1;
    string error = 2;
    optional commonsvc.TopicPartition detail = 3;
}

message PullReq {
    // 过滤条件
    repeated string topics = 1;
    repeated uint32 partition_ids = 2;
    repeated uint32 broker_ids = 3;
    repeated string keys = 4;
}
